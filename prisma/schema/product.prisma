model Product {
    id            String   @id @default(uuid())
    brandId       String
    categoryId    String
    subCategoryId String?
    name          String
    description   String
    imageUrl      String
    price         Int
    freeShipping  Boolean  @default(false)
    createdBy     String
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    isApproved    Boolean  @default(false)

    // A product can have many images
    moreImages ProductImage[]

    // A product can have many carts (it can belong to many carts)
    carts CartsOnProducts[]

    brand       Brand        @relation(fields: [brandId], references: [id], onDelete: Cascade)
    category    Category     @relation(fields: [categoryId], references: [id], onDelete: Cascade)
    subCategory SubCategory? @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)
    user        User         @relation(fields: [createdBy], references: [id], onDelete: Cascade)
}

model ProductImage {
    id         String   @id @default(uuid())
    productId  String
    imageUrl   String
    createdBy  String
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    isApproved Boolean  @default(false)

    product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
    user    User    @relation(fields: [createdBy], references: [id], onDelete: Cascade)
}
