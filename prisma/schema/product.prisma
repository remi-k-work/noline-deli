model Product {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    brandId      String?  @db.ObjectId
    name         String
    description  String
    imageUrl     String
    price        Int
    freeShipping Boolean  @default(false)
    createdBy    String   @db.ObjectId
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
    isApproved   Boolean  @default(false)

    // A product can have many categories (it can belong to many categories)
    categories CategoriesOnProducts[]

    // A product can have many subcategories (it can belong to many subcategories)
    subCategories SubCategoriesOnProducts[]

    // A product can have many images (it can belong to many images)
    moreImages ProductImage[]

    // A product can have many carts (it can belong to many carts)
    carts CartsOnProducts[]

    brand Brand? @relation(fields: [brandId], references: [id], onDelete: Cascade)
    user  User   @relation(fields: [createdBy], references: [id], onDelete: Cascade)
}

model ProductImage {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    productId  String   @db.ObjectId
    imageUrl   String
    createdBy  String   @db.ObjectId
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    isApproved Boolean  @default(false)

    product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
    user    User    @relation(fields: [createdBy], references: [id], onDelete: Cascade)
}
